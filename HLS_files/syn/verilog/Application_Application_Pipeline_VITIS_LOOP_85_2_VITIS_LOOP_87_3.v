// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Application_Application_Pipeline_VITIS_LOOP_85_2_VITIS_LOOP_87_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_r_address0,
        image_r_ce0,
        image_r_we0,
        image_r_d0,
        image_r_q0,
        image_r_address1,
        image_r_ce1,
        image_r_we1,
        image_r_d1,
        image_r_q1,
        grp_fu_555_p_din0,
        grp_fu_555_p_din1,
        grp_fu_555_p_opcode,
        grp_fu_555_p_dout0,
        grp_fu_555_p_ce,
        grp_fu_559_p_din0,
        grp_fu_559_p_din1,
        grp_fu_559_p_dout0,
        grp_fu_559_p_ce,
        grp_fu_563_p_din0,
        grp_fu_563_p_dout0,
        grp_fu_563_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] image_r_address0;
output   image_r_ce0;
output   image_r_we0;
output  [31:0] image_r_d0;
input  [31:0] image_r_q0;
output  [11:0] image_r_address1;
output   image_r_ce1;
output   image_r_we1;
output  [31:0] image_r_d1;
input  [31:0] image_r_q1;
output  [63:0] grp_fu_555_p_din0;
output  [63:0] grp_fu_555_p_din1;
output  [1:0] grp_fu_555_p_opcode;
input  [63:0] grp_fu_555_p_dout0;
output   grp_fu_555_p_ce;
output  [63:0] grp_fu_559_p_din0;
output  [63:0] grp_fu_559_p_din1;
input  [63:0] grp_fu_559_p_dout0;
output   grp_fu_559_p_ce;
output  [31:0] grp_fu_563_p_din0;
input  [63:0] grp_fu_563_p_dout0;
output   grp_fu_563_p_ce;

reg ap_idle;
reg[11:0] image_r_address0;
reg image_r_ce0;
reg image_r_we0;
reg[11:0] image_r_address1;
reg image_r_ce1;
reg image_r_we1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_state24_pp0_stage2_iter7;
wire    ap_block_state27_pp0_stage2_iter8;
wire    ap_block_state30_pp0_stage2_iter9;
wire    ap_block_state33_pp0_stage2_iter10;
wire    ap_block_state36_pp0_stage2_iter11;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln85_reg_498;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] icmp_ln85_fu_171_p2;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_state22_pp0_stage0_iter7;
wire    ap_block_state25_pp0_stage0_iter8;
wire    ap_block_state28_pp0_stage0_iter9;
wire    ap_block_state31_pp0_stage0_iter10;
wire    ap_block_state34_pp0_stage0_iter11;
wire    ap_block_state37_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln85_reg_498_pp0_iter1_reg;
reg   [0:0] icmp_ln85_reg_498_pp0_iter2_reg;
reg   [0:0] icmp_ln85_reg_498_pp0_iter3_reg;
reg   [0:0] icmp_ln85_reg_498_pp0_iter4_reg;
reg   [0:0] icmp_ln85_reg_498_pp0_iter5_reg;
reg   [0:0] icmp_ln85_reg_498_pp0_iter6_reg;
reg   [0:0] icmp_ln85_reg_498_pp0_iter7_reg;
reg   [0:0] icmp_ln85_reg_498_pp0_iter8_reg;
reg   [0:0] icmp_ln85_reg_498_pp0_iter9_reg;
reg   [0:0] icmp_ln85_reg_498_pp0_iter10_reg;
reg   [0:0] icmp_ln85_reg_498_pp0_iter11_reg;
reg   [4:0] i_load_reg_502;
wire   [4:0] add_ln85_fu_186_p2;
reg   [4:0] add_ln85_reg_507;
wire   [4:0] select_ln85_fu_206_p3;
reg   [4:0] select_ln85_reg_512;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_state23_pp0_stage1_iter7;
wire    ap_block_state26_pp0_stage1_iter8;
wire    ap_block_state29_pp0_stage1_iter9;
wire    ap_block_state32_pp0_stage1_iter10;
wire    ap_block_state35_pp0_stage1_iter11;
wire    ap_block_state38_pp0_stage1_iter12;
wire    ap_block_pp0_stage1_11001;
wire   [11:0] mul_ln90_fu_224_p2;
reg   [11:0] mul_ln90_reg_517;
wire  signed [7:0] sub_ln90_fu_246_p2;
reg  signed [7:0] sub_ln90_reg_524;
wire   [7:0] add_ln90_fu_252_p2;
reg   [7:0] add_ln90_reg_530;
reg   [11:0] image_addr_reg_535;
wire    ap_block_pp0_stage2_11001;
reg   [11:0] image_addr_reg_535_pp0_iter1_reg;
reg   [11:0] image_addr_reg_535_pp0_iter2_reg;
reg   [11:0] image_addr_reg_535_pp0_iter3_reg;
reg   [11:0] image_addr_reg_535_pp0_iter4_reg;
reg   [11:0] image_addr_reg_535_pp0_iter5_reg;
reg   [11:0] image_addr_reg_535_pp0_iter6_reg;
reg   [11:0] image_addr_reg_535_pp0_iter7_reg;
reg   [11:0] image_addr_reg_535_pp0_iter8_reg;
reg   [11:0] image_addr_reg_535_pp0_iter9_reg;
reg   [11:0] image_addr_reg_535_pp0_iter10_reg;
reg   [11:0] image_addr_reg_535_pp0_iter11_reg;
reg   [11:0] image_addr_1_reg_541;
reg   [11:0] image_addr_1_reg_541_pp0_iter1_reg;
reg   [11:0] image_addr_1_reg_541_pp0_iter2_reg;
reg   [11:0] image_addr_1_reg_541_pp0_iter3_reg;
reg   [11:0] image_addr_1_reg_541_pp0_iter4_reg;
reg   [11:0] image_addr_1_reg_541_pp0_iter5_reg;
reg   [11:0] image_addr_1_reg_541_pp0_iter6_reg;
reg   [11:0] image_addr_1_reg_541_pp0_iter7_reg;
reg   [11:0] image_addr_1_reg_541_pp0_iter8_reg;
reg   [11:0] image_addr_1_reg_541_pp0_iter9_reg;
reg   [11:0] image_addr_1_reg_541_pp0_iter10_reg;
reg   [11:0] image_addr_1_reg_541_pp0_iter11_reg;
wire   [11:0] add_ln90_4_fu_298_p2;
reg   [11:0] add_ln90_4_reg_547;
reg   [31:0] image_load_reg_552;
reg   [31:0] image_load_1_reg_557;
reg   [11:0] image_addr_2_reg_562;
reg   [11:0] image_addr_2_reg_562_pp0_iter2_reg;
reg   [11:0] image_addr_2_reg_562_pp0_iter3_reg;
reg   [11:0] image_addr_2_reg_562_pp0_iter4_reg;
reg   [11:0] image_addr_2_reg_562_pp0_iter5_reg;
reg   [11:0] image_addr_2_reg_562_pp0_iter6_reg;
reg   [11:0] image_addr_2_reg_562_pp0_iter7_reg;
reg   [11:0] image_addr_2_reg_562_pp0_iter8_reg;
reg   [11:0] image_addr_2_reg_562_pp0_iter9_reg;
reg   [11:0] image_addr_2_reg_562_pp0_iter10_reg;
reg   [11:0] image_addr_2_reg_562_pp0_iter11_reg;
reg   [11:0] image_addr_2_reg_562_pp0_iter12_reg;
reg   [31:0] image_load_2_reg_568;
reg   [63:0] conv_reg_573;
reg   [63:0] conv1_reg_578;
reg   [63:0] conv2_reg_583;
reg   [63:0] mul1_reg_588;
reg   [63:0] mul2_reg_593;
reg   [63:0] mul3_reg_598;
reg   [63:0] mul3_reg_598_pp0_iter7_reg;
reg   [63:0] mul3_reg_598_pp0_iter8_reg;
reg   [63:0] add_reg_603;
reg   [63:0] dc_reg_608;
reg   [0:0] p_Result_s_reg_613;
wire   [31:0] val_fu_434_p3;
reg   [31:0] val_reg_618;
wire   [31:0] gray_fu_469_p3;
reg   [31:0] gray_reg_624;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln90_2_fu_271_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln90_3_fu_284_p1;
wire   [63:0] zext_ln90_4_fu_303_p1;
wire    ap_block_pp0_stage0;
reg   [4:0] j_fu_94;
wire   [4:0] add_ln87_fu_307_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage1;
reg   [4:0] i_fu_98;
wire   [4:0] select_ln85_1_fu_214_p3;
reg   [4:0] ap_sig_allocacmp_i_load;
reg   [9:0] indvar_flatten_fu_102;
wire   [9:0] add_ln85_1_fu_177_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [63:0] grp_fu_139_p0;
reg   [63:0] grp_fu_139_p1;
reg   [63:0] grp_fu_143_p0;
reg   [63:0] grp_fu_143_p1;
reg   [31:0] grp_fu_150_p0;
wire   [0:0] icmp_ln87_fu_200_p2;
wire   [4:0] mul_ln90_fu_224_p0;
wire   [7:0] mul_ln90_fu_224_p1;
wire   [6:0] shl_ln_fu_234_p3;
wire   [7:0] zext_ln90_fu_242_p1;
wire   [7:0] j_cast1_fu_230_p1;
wire  signed [11:0] sext_ln90_fu_263_p1;
wire   [11:0] add_ln90_2_fu_266_p2;
wire  signed [11:0] sext_ln90_1_fu_276_p1;
wire   [11:0] add_ln90_3_fu_279_p2;
wire   [7:0] add_ln90_1_fu_289_p2;
wire  signed [11:0] sext_ln90_2_fu_294_p1;
wire   [63:0] data_V_fu_317_p1;
wire   [51:0] p_Result_2_fu_338_p1;
wire   [53:0] mantissa_fu_342_p4;
wire   [10:0] xs_exp_V_fu_328_p4;
wire   [11:0] zext_ln515_fu_356_p1;
wire   [11:0] add_ln515_fu_360_p2;
wire   [10:0] sub_ln1512_fu_374_p2;
wire   [0:0] isNeg_fu_366_p3;
wire  signed [11:0] sext_ln1512_fu_380_p1;
wire   [11:0] ush_fu_384_p3;
wire  signed [31:0] sext_ln1488_fu_392_p1;
wire   [136:0] zext_ln15_fu_352_p1;
wire   [136:0] zext_ln1488_fu_396_p1;
wire   [136:0] r_V_fu_400_p2;
wire   [0:0] tmp_fu_412_p3;
wire   [136:0] r_V_2_fu_406_p2;
wire   [31:0] zext_ln818_fu_420_p1;
wire   [31:0] tmp_s_fu_424_p4;
wire   [31:0] result_V_3_fu_442_p2;
wire   [31:0] result_V_fu_447_p3;
wire   [23:0] tmp_1_fu_453_p4;
wire   [0:0] icmp_ln200_fu_463_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter11_stage1;
reg    ap_idle_pp0_0to10;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to12;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage2_00001;
wire   [11:0] mul_ln90_fu_224_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Application_mul_5ns_8ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 12 ))
mul_5ns_8ns_12_1_1_U9(
    .din0(mul_ln90_fu_224_p0),
    .din1(mul_ln90_fu_224_p1),
    .dout(mul_ln90_fu_224_p2)
);

Application_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_98 <= 5'd0;
    end else if (((icmp_ln85_reg_498 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_98 <= select_ln85_1_fu_214_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln85_fu_171_p2 == 1'd0))) begin
            indvar_flatten_fu_102 <= add_ln85_1_fu_177_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_102 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_94 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            j_fu_94 <= add_ln87_fu_307_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln85_fu_171_p2 == 1'd0))) begin
        add_ln85_reg_507 <= add_ln85_fu_186_p2;
        i_load_reg_502 <= ap_sig_allocacmp_i_load;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_reg_498 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln90_4_reg_547 <= add_ln90_4_fu_298_p2;
        image_addr_1_reg_541 <= zext_ln90_3_fu_284_p1;
        image_addr_reg_535 <= zext_ln90_2_fu_271_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_reg_498 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln90_reg_530 <= add_ln90_fu_252_p2;
        mul_ln90_reg_517 <= mul_ln90_fu_224_p2;
        select_ln85_reg_512 <= select_ln85_fu_206_p3;
        sub_ln90_reg_524 <= sub_ln90_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_reg_603 <= grp_fu_555_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv1_reg_578 <= grp_fu_563_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv2_reg_583 <= grp_fu_563_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_reg_573 <= grp_fu_563_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dc_reg_608 <= grp_fu_555_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        gray_reg_624 <= gray_fu_469_p3;
        image_addr_1_reg_541_pp0_iter10_reg <= image_addr_1_reg_541_pp0_iter9_reg;
        image_addr_1_reg_541_pp0_iter11_reg <= image_addr_1_reg_541_pp0_iter10_reg;
        image_addr_1_reg_541_pp0_iter1_reg <= image_addr_1_reg_541;
        image_addr_1_reg_541_pp0_iter2_reg <= image_addr_1_reg_541_pp0_iter1_reg;
        image_addr_1_reg_541_pp0_iter3_reg <= image_addr_1_reg_541_pp0_iter2_reg;
        image_addr_1_reg_541_pp0_iter4_reg <= image_addr_1_reg_541_pp0_iter3_reg;
        image_addr_1_reg_541_pp0_iter5_reg <= image_addr_1_reg_541_pp0_iter4_reg;
        image_addr_1_reg_541_pp0_iter6_reg <= image_addr_1_reg_541_pp0_iter5_reg;
        image_addr_1_reg_541_pp0_iter7_reg <= image_addr_1_reg_541_pp0_iter6_reg;
        image_addr_1_reg_541_pp0_iter8_reg <= image_addr_1_reg_541_pp0_iter7_reg;
        image_addr_1_reg_541_pp0_iter9_reg <= image_addr_1_reg_541_pp0_iter8_reg;
        image_addr_reg_535_pp0_iter10_reg <= image_addr_reg_535_pp0_iter9_reg;
        image_addr_reg_535_pp0_iter11_reg <= image_addr_reg_535_pp0_iter10_reg;
        image_addr_reg_535_pp0_iter1_reg <= image_addr_reg_535;
        image_addr_reg_535_pp0_iter2_reg <= image_addr_reg_535_pp0_iter1_reg;
        image_addr_reg_535_pp0_iter3_reg <= image_addr_reg_535_pp0_iter2_reg;
        image_addr_reg_535_pp0_iter4_reg <= image_addr_reg_535_pp0_iter3_reg;
        image_addr_reg_535_pp0_iter5_reg <= image_addr_reg_535_pp0_iter4_reg;
        image_addr_reg_535_pp0_iter6_reg <= image_addr_reg_535_pp0_iter5_reg;
        image_addr_reg_535_pp0_iter7_reg <= image_addr_reg_535_pp0_iter6_reg;
        image_addr_reg_535_pp0_iter8_reg <= image_addr_reg_535_pp0_iter7_reg;
        image_addr_reg_535_pp0_iter9_reg <= image_addr_reg_535_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln85_reg_498 <= icmp_ln85_fu_171_p2;
        icmp_ln85_reg_498_pp0_iter10_reg <= icmp_ln85_reg_498_pp0_iter9_reg;
        icmp_ln85_reg_498_pp0_iter11_reg <= icmp_ln85_reg_498_pp0_iter10_reg;
        icmp_ln85_reg_498_pp0_iter1_reg <= icmp_ln85_reg_498;
        icmp_ln85_reg_498_pp0_iter2_reg <= icmp_ln85_reg_498_pp0_iter1_reg;
        icmp_ln85_reg_498_pp0_iter3_reg <= icmp_ln85_reg_498_pp0_iter2_reg;
        icmp_ln85_reg_498_pp0_iter4_reg <= icmp_ln85_reg_498_pp0_iter3_reg;
        icmp_ln85_reg_498_pp0_iter5_reg <= icmp_ln85_reg_498_pp0_iter4_reg;
        icmp_ln85_reg_498_pp0_iter6_reg <= icmp_ln85_reg_498_pp0_iter5_reg;
        icmp_ln85_reg_498_pp0_iter7_reg <= icmp_ln85_reg_498_pp0_iter6_reg;
        icmp_ln85_reg_498_pp0_iter8_reg <= icmp_ln85_reg_498_pp0_iter7_reg;
        icmp_ln85_reg_498_pp0_iter9_reg <= icmp_ln85_reg_498_pp0_iter8_reg;
        image_addr_2_reg_562 <= zext_ln90_4_fu_303_p1;
        image_addr_2_reg_562_pp0_iter10_reg <= image_addr_2_reg_562_pp0_iter9_reg;
        image_addr_2_reg_562_pp0_iter11_reg <= image_addr_2_reg_562_pp0_iter10_reg;
        image_addr_2_reg_562_pp0_iter12_reg <= image_addr_2_reg_562_pp0_iter11_reg;
        image_addr_2_reg_562_pp0_iter2_reg <= image_addr_2_reg_562;
        image_addr_2_reg_562_pp0_iter3_reg <= image_addr_2_reg_562_pp0_iter2_reg;
        image_addr_2_reg_562_pp0_iter4_reg <= image_addr_2_reg_562_pp0_iter3_reg;
        image_addr_2_reg_562_pp0_iter5_reg <= image_addr_2_reg_562_pp0_iter4_reg;
        image_addr_2_reg_562_pp0_iter6_reg <= image_addr_2_reg_562_pp0_iter5_reg;
        image_addr_2_reg_562_pp0_iter7_reg <= image_addr_2_reg_562_pp0_iter6_reg;
        image_addr_2_reg_562_pp0_iter8_reg <= image_addr_2_reg_562_pp0_iter7_reg;
        image_addr_2_reg_562_pp0_iter9_reg <= image_addr_2_reg_562_pp0_iter8_reg;
        mul3_reg_598_pp0_iter7_reg <= mul3_reg_598;
        mul3_reg_598_pp0_iter8_reg <= mul3_reg_598_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_load_1_reg_557 <= image_r_q0;
        image_load_reg_552 <= image_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_load_2_reg_568 <= image_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul1_reg_588 <= grp_fu_559_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul2_reg_593 <= grp_fu_559_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul3_reg_598 <= grp_fu_559_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_Result_s_reg_613 <= data_V_fu_317_p1[32'd63];
        val_reg_618 <= val_fu_434_p3;
    end
end

always @ (*) begin
    if (((icmp_ln85_reg_498 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln85_reg_498_pp0_iter11_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter11_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter11_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to10 = 1'b1;
    end else begin
        ap_idle_pp0_0to10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to12 = 1'b1;
    end else begin
        ap_idle_pp0_1to12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 5'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_139_p0 = add_reg_603;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_139_p0 = mul1_reg_588;
    end else begin
        grp_fu_139_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_139_p1 = mul3_reg_598_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_139_p1 = mul2_reg_593;
    end else begin
        grp_fu_139_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_143_p0 = conv2_reg_583;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_143_p0 = conv1_reg_578;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_143_p0 = conv_reg_573;
    end else begin
        grp_fu_143_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_143_p1 = 64'd4592878986383488713;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_143_p1 = 64'd4603462445507809378;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_143_p1 = 64'd4599057925072241033;
    end else begin
        grp_fu_143_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_150_p0 = image_load_2_reg_568;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_150_p0 = image_load_1_reg_557;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_150_p0 = image_load_reg_552;
    end else begin
        grp_fu_150_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_r_address0 = image_addr_2_reg_562_pp0_iter12_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_r_address0 = image_addr_reg_535_pp0_iter11_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        image_r_address0 = zext_ln90_3_fu_284_p1;
    end else begin
        image_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_r_address1 = image_addr_1_reg_541_pp0_iter11_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_r_address1 = zext_ln90_4_fu_303_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        image_r_address1 = zext_ln90_2_fu_271_p1;
    end else begin
        image_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        image_r_ce0 = 1'b1;
    end else begin
        image_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        image_r_ce1 = 1'b1;
    end else begin
        image_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        image_r_we0 = 1'b1;
    end else begin
        image_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_r_we1 = 1'b1;
    end else begin
        image_r_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to12 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln515_fu_360_p2 = ($signed(zext_ln515_fu_356_p1) + $signed(12'd3073));

assign add_ln85_1_fu_177_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign add_ln85_fu_186_p2 = (ap_sig_allocacmp_i_load + 5'd1);

assign add_ln87_fu_307_p2 = (select_ln85_reg_512 + 5'd1);

assign add_ln90_1_fu_289_p2 = ($signed(sub_ln90_reg_524) + $signed(8'd2));

assign add_ln90_2_fu_266_p2 = ($signed(mul_ln90_reg_517) + $signed(sext_ln90_fu_263_p1));

assign add_ln90_3_fu_279_p2 = ($signed(mul_ln90_reg_517) + $signed(sext_ln90_1_fu_276_p1));

assign add_ln90_4_fu_298_p2 = ($signed(mul_ln90_reg_517) + $signed(sext_ln90_2_fu_294_p1));

assign add_ln90_fu_252_p2 = ($signed(sub_ln90_fu_246_p2) + $signed(8'd1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign data_V_fu_317_p1 = dc_reg_608;

assign gray_fu_469_p3 = ((icmp_ln200_fu_463_p2[0:0] == 1'b1) ? 32'd255 : result_V_fu_447_p3);

assign grp_fu_555_p_ce = 1'b1;

assign grp_fu_555_p_din0 = grp_fu_139_p0;

assign grp_fu_555_p_din1 = grp_fu_139_p1;

assign grp_fu_555_p_opcode = 2'd0;

assign grp_fu_559_p_ce = 1'b1;

assign grp_fu_559_p_din0 = grp_fu_143_p0;

assign grp_fu_559_p_din1 = grp_fu_143_p1;

assign grp_fu_563_p_ce = 1'b1;

assign grp_fu_563_p_din0 = grp_fu_150_p0;

assign icmp_ln200_fu_463_p2 = (($signed(tmp_1_fu_453_p4) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_171_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd690) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_200_p2 = ((j_fu_94 == 5'd30) ? 1'b1 : 1'b0);

assign image_r_d0 = gray_reg_624;

assign image_r_d1 = gray_reg_624;

assign isNeg_fu_366_p3 = add_ln515_fu_360_p2[32'd11];

assign j_cast1_fu_230_p1 = select_ln85_fu_206_p3;

assign mantissa_fu_342_p4 = {{{{1'd1}, {p_Result_2_fu_338_p1}}}, {1'd0}};

assign mul_ln90_fu_224_p0 = mul_ln90_fu_224_p00;

assign mul_ln90_fu_224_p00 = select_ln85_1_fu_214_p3;

assign mul_ln90_fu_224_p1 = 12'd90;

assign p_Result_2_fu_338_p1 = data_V_fu_317_p1[51:0];

assign r_V_2_fu_406_p2 = zext_ln15_fu_352_p1 << zext_ln1488_fu_396_p1;

assign r_V_fu_400_p2 = zext_ln15_fu_352_p1 >> zext_ln1488_fu_396_p1;

assign result_V_3_fu_442_p2 = (32'd0 - val_reg_618);

assign result_V_fu_447_p3 = ((p_Result_s_reg_613[0:0] == 1'b1) ? result_V_3_fu_442_p2 : val_reg_618);

assign select_ln85_1_fu_214_p3 = ((icmp_ln87_fu_200_p2[0:0] == 1'b1) ? add_ln85_reg_507 : i_load_reg_502);

assign select_ln85_fu_206_p3 = ((icmp_ln87_fu_200_p2[0:0] == 1'b1) ? 5'd0 : j_fu_94);

assign sext_ln1488_fu_392_p1 = $signed(ush_fu_384_p3);

assign sext_ln1512_fu_380_p1 = $signed(sub_ln1512_fu_374_p2);

assign sext_ln90_1_fu_276_p1 = $signed(add_ln90_reg_530);

assign sext_ln90_2_fu_294_p1 = $signed(add_ln90_1_fu_289_p2);

assign sext_ln90_fu_263_p1 = sub_ln90_reg_524;

assign shl_ln_fu_234_p3 = {{select_ln85_fu_206_p3}, {2'd0}};

assign sub_ln1512_fu_374_p2 = (11'd1023 - xs_exp_V_fu_328_p4);

assign sub_ln90_fu_246_p2 = (zext_ln90_fu_242_p1 - j_cast1_fu_230_p1);

assign tmp_1_fu_453_p4 = {{result_V_fu_447_p3[31:8]}};

assign tmp_fu_412_p3 = r_V_fu_400_p2[32'd53];

assign tmp_s_fu_424_p4 = {{r_V_2_fu_406_p2[84:53]}};

assign ush_fu_384_p3 = ((isNeg_fu_366_p3[0:0] == 1'b1) ? sext_ln1512_fu_380_p1 : add_ln515_fu_360_p2);

assign val_fu_434_p3 = ((isNeg_fu_366_p3[0:0] == 1'b1) ? zext_ln818_fu_420_p1 : tmp_s_fu_424_p4);

assign xs_exp_V_fu_328_p4 = {{data_V_fu_317_p1[62:52]}};

assign zext_ln1488_fu_396_p1 = $unsigned(sext_ln1488_fu_392_p1);

assign zext_ln15_fu_352_p1 = mantissa_fu_342_p4;

assign zext_ln515_fu_356_p1 = xs_exp_V_fu_328_p4;

assign zext_ln818_fu_420_p1 = tmp_fu_412_p3;

assign zext_ln90_2_fu_271_p1 = add_ln90_2_fu_266_p2;

assign zext_ln90_3_fu_284_p1 = add_ln90_3_fu_279_p2;

assign zext_ln90_4_fu_303_p1 = add_ln90_4_reg_547;

assign zext_ln90_fu_242_p1 = shl_ln_fu_234_p3;

endmodule //Application_Application_Pipeline_VITIS_LOOP_85_2_VITIS_LOOP_87_3
