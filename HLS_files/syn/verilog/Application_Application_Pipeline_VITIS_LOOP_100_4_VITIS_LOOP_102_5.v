// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Application_Application_Pipeline_VITIS_LOOP_100_4_VITIS_LOOP_102_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_r_address0,
        image_r_ce0,
        image_r_we0,
        image_r_d0,
        image_r_q0,
        image_r_address1,
        image_r_ce1,
        image_r_we1,
        image_r_d1,
        image_r_q1,
        brmerge_demorgan,
        mul,
        grp_fu_232_p_din0,
        grp_fu_232_p_din1,
        grp_fu_232_p_opcode,
        grp_fu_232_p_dout0,
        grp_fu_232_p_ce,
        grp_fu_566_p_din0,
        grp_fu_566_p_dout0,
        grp_fu_566_p_ce,
        grp_p_hls_fptosi_float_i32_fu_180_p_din1,
        grp_p_hls_fptosi_float_i32_fu_180_p_dout0,
        grp_p_hls_fptosi_float_i32_fu_180_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] image_r_address0;
output   image_r_ce0;
output   image_r_we0;
output  [31:0] image_r_d0;
input  [31:0] image_r_q0;
output  [11:0] image_r_address1;
output   image_r_ce1;
output   image_r_we1;
output  [31:0] image_r_d1;
input  [31:0] image_r_q1;
input  [0:0] brmerge_demorgan;
input  [31:0] mul;
output  [31:0] grp_fu_232_p_din0;
output  [31:0] grp_fu_232_p_din1;
output  [1:0] grp_fu_232_p_opcode;
input  [31:0] grp_fu_232_p_dout0;
output   grp_fu_232_p_ce;
output  [31:0] grp_fu_566_p_din0;
input  [31:0] grp_fu_566_p_dout0;
output   grp_fu_566_p_ce;
output  [31:0] grp_p_hls_fptosi_float_i32_fu_180_p_din1;
input  [31:0] grp_p_hls_fptosi_float_i32_fu_180_p_dout0;
output   grp_p_hls_fptosi_float_i32_fu_180_p_ce;

reg ap_idle;
reg[11:0] image_r_address0;
reg image_r_ce0;
reg image_r_we0;
reg[31:0] image_r_d0;
reg[11:0] image_r_address1;
reg image_r_ce1;
reg image_r_we1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln100_reg_554;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_149;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] brmerge_demorgan_read_reg_550;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_state22_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln100_fu_173_p2;
reg   [0:0] icmp_ln100_reg_554_pp0_iter1_reg;
reg   [0:0] icmp_ln100_reg_554_pp0_iter2_reg;
reg   [0:0] icmp_ln100_reg_554_pp0_iter3_reg;
reg   [0:0] icmp_ln100_reg_554_pp0_iter4_reg;
reg   [0:0] icmp_ln100_reg_554_pp0_iter5_reg;
reg   [0:0] icmp_ln100_reg_554_pp0_iter6_reg;
reg   [4:0] i_load_reg_558;
wire   [4:0] add_ln100_fu_188_p2;
reg   [4:0] add_ln100_reg_563;
wire   [4:0] select_ln100_fu_208_p3;
reg   [4:0] select_ln100_reg_568;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_state23_pp0_stage1_iter7;
wire    ap_block_pp0_stage1_11001;
wire   [11:0] mul_ln110_fu_226_p2;
reg   [11:0] mul_ln110_reg_573;
wire  signed [7:0] sub_ln104_fu_248_p2;
reg  signed [7:0] sub_ln104_reg_580;
wire   [7:0] add_ln105_fu_254_p2;
reg   [7:0] add_ln105_reg_586;
reg   [11:0] image_addr_4_reg_591;
reg   [11:0] image_addr_4_reg_591_pp0_iter1_reg;
reg   [11:0] image_addr_4_reg_591_pp0_iter2_reg;
reg   [11:0] image_addr_4_reg_591_pp0_iter3_reg;
reg   [11:0] image_addr_4_reg_591_pp0_iter4_reg;
reg   [11:0] image_addr_4_reg_591_pp0_iter5_reg;
reg   [11:0] image_addr_4_reg_591_pp0_iter6_reg;
reg   [11:0] image_addr_5_reg_597;
reg   [11:0] image_addr_5_reg_597_pp0_iter1_reg;
reg   [11:0] image_addr_5_reg_597_pp0_iter2_reg;
reg   [11:0] image_addr_5_reg_597_pp0_iter3_reg;
reg   [11:0] image_addr_5_reg_597_pp0_iter4_reg;
reg   [11:0] image_addr_5_reg_597_pp0_iter5_reg;
reg   [11:0] image_addr_5_reg_597_pp0_iter6_reg;
reg   [11:0] image_addr_6_reg_603;
reg   [11:0] image_addr_6_reg_603_pp0_iter1_reg;
reg   [11:0] image_addr_6_reg_603_pp0_iter2_reg;
reg   [11:0] image_addr_6_reg_603_pp0_iter3_reg;
reg   [11:0] image_addr_6_reg_603_pp0_iter4_reg;
reg   [11:0] image_addr_6_reg_603_pp0_iter5_reg;
reg   [11:0] image_addr_6_reg_603_pp0_iter6_reg;
reg   [31:0] image_load_3_reg_609;
reg   [31:0] image_load_4_reg_614;
reg   [31:0] image_load_5_reg_619;
reg   [31:0] conv3_reg_624;
reg   [31:0] conv4_reg_629;
reg   [31:0] conv5_reg_634;
reg   [31:0] newRed_reg_639;
reg   [31:0] newGreen_reg_647;
reg   [31:0] newBlue_reg_655;
wire   [31:0] newRed_1_fu_381_p3;
reg   [31:0] newRed_1_reg_663;
wire   [31:0] newGreen_1_fu_449_p3;
reg   [31:0] newGreen_1_reg_668;
wire   [31:0] newBlue_1_fu_517_p3;
reg   [31:0] newBlue_1_reg_673;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
reg   [31:0] grp_p_hls_fptosi_float_i32_fu_126_x;
reg    grp_p_hls_fptosi_float_i32_fu_126_ap_ce;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call48;
wire    ap_block_state5_pp0_stage1_iter1_ignore_call48;
wire    ap_block_state8_pp0_stage1_iter2_ignore_call48;
wire    ap_block_state11_pp0_stage1_iter3_ignore_call48;
wire    ap_block_state14_pp0_stage1_iter4_ignore_call48;
wire    ap_block_state17_pp0_stage1_iter5_ignore_call48;
wire    ap_block_state20_pp0_stage1_iter6_ignore_call48;
wire    ap_block_state23_pp0_stage1_iter7_ignore_call48;
wire    ap_block_pp0_stage1_11001_ignoreCallOp153;
wire    ap_block_state3_pp0_stage2_iter0_ignore_call48;
wire    ap_block_state6_pp0_stage2_iter1_ignore_call48;
wire    ap_block_state9_pp0_stage2_iter2_ignore_call48;
wire    ap_block_state12_pp0_stage2_iter3_ignore_call48;
wire    ap_block_state15_pp0_stage2_iter4_ignore_call48;
wire    ap_block_state18_pp0_stage2_iter5_ignore_call48;
wire    ap_block_state21_pp0_stage2_iter6_ignore_call48;
wire    ap_block_pp0_stage2_11001_ignoreCallOp167;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call50;
wire    ap_block_state4_pp0_stage0_iter1_ignore_call50;
wire    ap_block_state7_pp0_stage0_iter2_ignore_call50;
wire    ap_block_state10_pp0_stage0_iter3_ignore_call50;
wire    ap_block_state13_pp0_stage0_iter4_ignore_call50;
wire    ap_block_state16_pp0_stage0_iter5_ignore_call50;
wire    ap_block_state19_pp0_stage0_iter6_ignore_call50;
wire    ap_block_state22_pp0_stage0_iter7_ignore_call50;
wire    ap_block_pp0_stage0_11001_ignoreCallOp170;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln110_1_fu_273_p1;
wire   [63:0] zext_ln111_fu_286_p1;
wire   [63:0] zext_ln112_fu_305_p1;
reg   [4:0] j_fu_70;
wire   [4:0] add_ln102_fu_310_p2;
wire    ap_loop_init;
reg   [4:0] i_fu_74;
wire   [4:0] select_ln100_1_fu_216_p3;
reg   [4:0] ap_sig_allocacmp_i_load;
reg   [9:0] indvar_flatten6_fu_78;
wire   [9:0] add_ln100_1_fu_179_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten6_load;
reg   [31:0] grp_fu_132_p0;
reg   [31:0] grp_fu_136_p0;
reg   [31:0] grp_fu_139_p0;
reg   [31:0] grp_fu_144_p0;
wire   [0:0] icmp_ln102_fu_202_p2;
wire   [4:0] mul_ln110_fu_226_p0;
wire   [7:0] mul_ln110_fu_226_p1;
wire   [6:0] shl_ln1_fu_236_p3;
wire   [7:0] zext_ln104_fu_244_p1;
wire   [7:0] j_1_cast2_fu_232_p1;
wire  signed [11:0] sext_ln110_fu_265_p1;
wire   [11:0] add_ln110_fu_268_p2;
wire  signed [11:0] sext_ln111_fu_278_p1;
wire   [11:0] add_ln111_fu_281_p2;
wire   [7:0] add_ln106_fu_291_p2;
wire  signed [11:0] sext_ln112_fu_296_p1;
wire   [11:0] add_ln112_fu_300_p2;
wire   [31:0] bitcast_ln114_fu_320_p1;
wire   [7:0] tmp_s_fu_323_p4;
wire   [22:0] trunc_ln114_fu_333_p1;
wire   [0:0] icmp_ln114_1_fu_343_p2;
wire   [0:0] icmp_ln114_fu_337_p2;
wire   [0:0] or_ln114_1_fu_349_p2;
wire   [0:0] grp_fu_139_p2;
wire   [0:0] grp_fu_144_p2;
wire   [0:0] and_ln114_fu_355_p2;
wire   [0:0] and_ln116_fu_361_p2;
wire   [0:0] or_ln114_fu_375_p2;
wire   [31:0] select_ln114_fu_367_p3;
wire   [31:0] bitcast_ln119_fu_388_p1;
wire   [7:0] tmp_11_fu_391_p4;
wire   [22:0] trunc_ln119_fu_401_p1;
wire   [0:0] icmp_ln119_1_fu_411_p2;
wire   [0:0] icmp_ln119_fu_405_p2;
wire   [0:0] or_ln119_1_fu_417_p2;
wire   [0:0] and_ln119_fu_423_p2;
wire   [0:0] and_ln121_fu_429_p2;
wire   [0:0] or_ln119_fu_443_p2;
wire   [31:0] select_ln119_fu_435_p3;
wire   [31:0] bitcast_ln124_fu_456_p1;
wire   [7:0] tmp_14_fu_459_p4;
wire   [22:0] trunc_ln124_fu_469_p1;
wire   [0:0] icmp_ln124_1_fu_479_p2;
wire   [0:0] icmp_ln124_fu_473_p2;
wire   [0:0] or_ln124_1_fu_485_p2;
wire   [0:0] and_ln124_fu_491_p2;
wire   [0:0] and_ln126_fu_497_p2;
wire   [0:0] or_ln124_fu_511_p2;
wire   [31:0] select_ln124_fu_503_p3;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter6_stage1;
reg    ap_idle_pp0_0to5;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to7;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [11:0] mul_ln110_fu_226_p00;
reg    ap_condition_322;
reg    ap_condition_327;
reg    ap_condition_332;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Application_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_139_p0),
    .din1(32'd1132396544),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_139_p2)
);

Application_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_144_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_144_p2)
);

Application_mul_5ns_8ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 12 ))
mul_5ns_8ns_12_1_1_U16(
    .din0(mul_ln110_fu_226_p0),
    .din1(mul_ln110_fu_226_p1),
    .dout(mul_ln110_fu_226_p2)
);

Application_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_74 <= 5'd0;
    end else if (((icmp_ln100_reg_554 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_74 <= select_ln100_1_fu_216_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_fu_173_p2 == 1'd0))) begin
            indvar_flatten6_fu_78 <= add_ln100_1_fu_179_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_78 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_70 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            j_fu_70 <= add_ln102_fu_310_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln100_fu_173_p2 == 1'd0))) begin
        add_ln100_reg_563 <= add_ln100_fu_188_p2;
        i_load_reg_558 <= ap_sig_allocacmp_i_load;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_reg_554 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln105_reg_586 <= add_ln105_fu_254_p2;
        mul_ln110_reg_573 <= mul_ln110_fu_226_p2;
        select_ln100_reg_568 <= select_ln100_fu_208_p3;
        sub_ln104_reg_580 <= sub_ln104_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv3_reg_624 <= grp_fu_566_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv4_reg_629 <= grp_fu_566_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv5_reg_634 <= grp_fu_566_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln100_reg_554 <= icmp_ln100_fu_173_p2;
        icmp_ln100_reg_554_pp0_iter1_reg <= icmp_ln100_reg_554;
        icmp_ln100_reg_554_pp0_iter2_reg <= icmp_ln100_reg_554_pp0_iter1_reg;
        icmp_ln100_reg_554_pp0_iter3_reg <= icmp_ln100_reg_554_pp0_iter2_reg;
        icmp_ln100_reg_554_pp0_iter4_reg <= icmp_ln100_reg_554_pp0_iter3_reg;
        icmp_ln100_reg_554_pp0_iter5_reg <= icmp_ln100_reg_554_pp0_iter4_reg;
        icmp_ln100_reg_554_pp0_iter6_reg <= icmp_ln100_reg_554_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_reg_554 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        image_addr_4_reg_591 <= zext_ln110_1_fu_273_p1;
        image_addr_5_reg_597 <= zext_ln111_fu_286_p1;
        image_addr_6_reg_603 <= zext_ln112_fu_305_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        image_addr_4_reg_591_pp0_iter1_reg <= image_addr_4_reg_591;
        image_addr_4_reg_591_pp0_iter2_reg <= image_addr_4_reg_591_pp0_iter1_reg;
        image_addr_4_reg_591_pp0_iter3_reg <= image_addr_4_reg_591_pp0_iter2_reg;
        image_addr_4_reg_591_pp0_iter4_reg <= image_addr_4_reg_591_pp0_iter3_reg;
        image_addr_4_reg_591_pp0_iter5_reg <= image_addr_4_reg_591_pp0_iter4_reg;
        image_addr_4_reg_591_pp0_iter6_reg <= image_addr_4_reg_591_pp0_iter5_reg;
        image_addr_5_reg_597_pp0_iter1_reg <= image_addr_5_reg_597;
        image_addr_5_reg_597_pp0_iter2_reg <= image_addr_5_reg_597_pp0_iter1_reg;
        image_addr_5_reg_597_pp0_iter3_reg <= image_addr_5_reg_597_pp0_iter2_reg;
        image_addr_5_reg_597_pp0_iter4_reg <= image_addr_5_reg_597_pp0_iter3_reg;
        image_addr_5_reg_597_pp0_iter5_reg <= image_addr_5_reg_597_pp0_iter4_reg;
        image_addr_5_reg_597_pp0_iter6_reg <= image_addr_5_reg_597_pp0_iter5_reg;
        image_addr_6_reg_603_pp0_iter1_reg <= image_addr_6_reg_603;
        image_addr_6_reg_603_pp0_iter2_reg <= image_addr_6_reg_603_pp0_iter1_reg;
        image_addr_6_reg_603_pp0_iter3_reg <= image_addr_6_reg_603_pp0_iter2_reg;
        image_addr_6_reg_603_pp0_iter4_reg <= image_addr_6_reg_603_pp0_iter3_reg;
        image_addr_6_reg_603_pp0_iter5_reg <= image_addr_6_reg_603_pp0_iter4_reg;
        image_addr_6_reg_603_pp0_iter6_reg <= image_addr_6_reg_603_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_load_3_reg_609 <= image_r_q1;
        image_load_4_reg_614 <= image_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_load_5_reg_619 <= image_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        newBlue_1_reg_673 <= newBlue_1_fu_517_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        newBlue_reg_655 <= grp_fu_232_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        newGreen_1_reg_668 <= newGreen_1_fu_449_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        newGreen_reg_647 <= grp_fu_232_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        newRed_1_reg_663 <= newRed_1_fu_381_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        newRed_reg_639 <= grp_fu_232_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_149 <= grp_p_hls_fptosi_float_i32_fu_180_p_dout0;
    end
end

always @ (*) begin
    if (((icmp_ln100_reg_554 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln100_reg_554_pp0_iter6_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter6_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter6_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to7 = 1'b1;
    end else begin
        ap_idle_pp0_1to7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 5'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten6_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten6_load = indvar_flatten6_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_132_p0 = conv5_reg_634;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_132_p0 = conv4_reg_629;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_132_p0 = conv3_reg_624;
    end else begin
        grp_fu_132_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_136_p0 = image_load_5_reg_619;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_136_p0 = image_load_4_reg_614;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_136_p0 = image_load_3_reg_609;
    end else begin
        grp_fu_136_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_139_p0 = newBlue_reg_655;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_139_p0 = newGreen_reg_647;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_139_p0 = newRed_reg_639;
    end else begin
        grp_fu_139_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_144_p0 = newBlue_reg_655;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_144_p0 = newGreen_reg_647;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_144_p0 = newRed_reg_639;
    end else begin
        grp_fu_144_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp170) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp167) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp153) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_p_hls_fptosi_float_i32_fu_126_ap_ce = 1'b1;
    end else begin
        grp_p_hls_fptosi_float_i32_fu_126_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((brmerge_demorgan_read_reg_550 == 1'd1)) begin
        if ((1'b1 == ap_condition_332)) begin
            grp_p_hls_fptosi_float_i32_fu_126_x = newBlue_1_reg_673;
        end else if ((1'b1 == ap_condition_327)) begin
            grp_p_hls_fptosi_float_i32_fu_126_x = newGreen_1_reg_668;
        end else if ((1'b1 == ap_condition_322)) begin
            grp_p_hls_fptosi_float_i32_fu_126_x = newRed_1_reg_663;
        end else begin
            grp_p_hls_fptosi_float_i32_fu_126_x = 'bx;
        end
    end else begin
        grp_p_hls_fptosi_float_i32_fu_126_x = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_r_address0 = image_addr_6_reg_603_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_r_address0 = image_addr_4_reg_591_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        image_r_address0 = zext_ln111_fu_286_p1;
    end else begin
        image_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_r_address1 = image_addr_5_reg_597_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_r_address1 = image_addr_6_reg_603;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        image_r_address1 = zext_ln110_1_fu_273_p1;
    end else begin
        image_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        image_r_ce0 = 1'b1;
    end else begin
        image_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        image_r_ce1 = 1'b1;
    end else begin
        image_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            image_r_d0 = grp_p_hls_fptosi_float_i32_fu_180_p_dout0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            image_r_d0 = reg_149;
        end else begin
            image_r_d0 = 'bx;
        end
    end else begin
        image_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        image_r_we0 = 1'b1;
    end else begin
        image_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge_demorgan_read_reg_550 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_r_we1 = 1'b1;
    end else begin
        image_r_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to7 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_1_fu_179_p2 = (ap_sig_allocacmp_indvar_flatten6_load + 10'd1);

assign add_ln100_fu_188_p2 = (ap_sig_allocacmp_i_load + 5'd1);

assign add_ln102_fu_310_p2 = (select_ln100_reg_568 + 5'd1);

assign add_ln105_fu_254_p2 = ($signed(sub_ln104_fu_248_p2) + $signed(8'd1));

assign add_ln106_fu_291_p2 = ($signed(sub_ln104_reg_580) + $signed(8'd2));

assign add_ln110_fu_268_p2 = ($signed(mul_ln110_reg_573) + $signed(sext_ln110_fu_265_p1));

assign add_ln111_fu_281_p2 = ($signed(mul_ln110_reg_573) + $signed(sext_ln111_fu_278_p1));

assign add_ln112_fu_300_p2 = ($signed(mul_ln110_reg_573) + $signed(sext_ln112_fu_296_p1));

assign and_ln114_fu_355_p2 = (or_ln114_1_fu_349_p2 & grp_fu_139_p2);

assign and_ln116_fu_361_p2 = (or_ln114_1_fu_349_p2 & grp_fu_144_p2);

assign and_ln119_fu_423_p2 = (or_ln119_1_fu_417_p2 & grp_fu_139_p2);

assign and_ln121_fu_429_p2 = (or_ln119_1_fu_417_p2 & grp_fu_144_p2);

assign and_ln124_fu_491_p2 = (or_ln124_1_fu_485_p2 & grp_fu_139_p2);

assign and_ln126_fu_497_p2 = (or_ln124_1_fu_485_p2 & grp_fu_144_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp170 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp153 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp167 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3_ignore_call50 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4_ignore_call50 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5_ignore_call50 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6_ignore_call50 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call50 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7_ignore_call50 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1_ignore_call50 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2_ignore_call50 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2_ignore_call48 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_322 = ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_327 = ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_332 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign bitcast_ln114_fu_320_p1 = newRed_reg_639;

assign bitcast_ln119_fu_388_p1 = newGreen_reg_647;

assign bitcast_ln124_fu_456_p1 = newBlue_reg_655;

assign brmerge_demorgan_read_reg_550 = brmerge_demorgan;

assign grp_fu_232_p_ce = 1'b1;

assign grp_fu_232_p_din0 = grp_fu_132_p0;

assign grp_fu_232_p_din1 = mul;

assign grp_fu_232_p_opcode = 2'd0;

assign grp_fu_566_p_ce = 1'b1;

assign grp_fu_566_p_din0 = grp_fu_136_p0;

assign grp_p_hls_fptosi_float_i32_fu_180_p_ce = grp_p_hls_fptosi_float_i32_fu_126_ap_ce;

assign grp_p_hls_fptosi_float_i32_fu_180_p_din1 = grp_p_hls_fptosi_float_i32_fu_126_x;

assign icmp_ln100_fu_173_p2 = ((ap_sig_allocacmp_indvar_flatten6_load == 10'd690) ? 1'b1 : 1'b0);

assign icmp_ln102_fu_202_p2 = ((j_fu_70 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln114_1_fu_343_p2 = ((trunc_ln114_fu_333_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_337_p2 = ((tmp_s_fu_323_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln119_1_fu_411_p2 = ((trunc_ln119_fu_401_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln119_fu_405_p2 = ((tmp_11_fu_391_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln124_1_fu_479_p2 = ((trunc_ln124_fu_469_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_473_p2 = ((tmp_14_fu_459_p4 != 8'd255) ? 1'b1 : 1'b0);

assign image_r_d1 = reg_149;

assign j_1_cast2_fu_232_p1 = select_ln100_fu_208_p3;

assign mul_ln110_fu_226_p0 = mul_ln110_fu_226_p00;

assign mul_ln110_fu_226_p00 = select_ln100_1_fu_216_p3;

assign mul_ln110_fu_226_p1 = 12'd90;

assign newBlue_1_fu_517_p3 = ((or_ln124_fu_511_p2[0:0] == 1'b1) ? select_ln124_fu_503_p3 : newBlue_reg_655);

assign newGreen_1_fu_449_p3 = ((or_ln119_fu_443_p2[0:0] == 1'b1) ? select_ln119_fu_435_p3 : newGreen_reg_647);

assign newRed_1_fu_381_p3 = ((or_ln114_fu_375_p2[0:0] == 1'b1) ? select_ln114_fu_367_p3 : newRed_reg_639);

assign or_ln114_1_fu_349_p2 = (icmp_ln114_fu_337_p2 | icmp_ln114_1_fu_343_p2);

assign or_ln114_fu_375_p2 = (and_ln116_fu_361_p2 | and_ln114_fu_355_p2);

assign or_ln119_1_fu_417_p2 = (icmp_ln119_fu_405_p2 | icmp_ln119_1_fu_411_p2);

assign or_ln119_fu_443_p2 = (and_ln121_fu_429_p2 | and_ln119_fu_423_p2);

assign or_ln124_1_fu_485_p2 = (icmp_ln124_fu_473_p2 | icmp_ln124_1_fu_479_p2);

assign or_ln124_fu_511_p2 = (and_ln126_fu_497_p2 | and_ln124_fu_491_p2);

assign select_ln100_1_fu_216_p3 = ((icmp_ln102_fu_202_p2[0:0] == 1'b1) ? add_ln100_reg_563 : i_load_reg_558);

assign select_ln100_fu_208_p3 = ((icmp_ln102_fu_202_p2[0:0] == 1'b1) ? 5'd0 : j_fu_70);

assign select_ln114_fu_367_p3 = ((and_ln114_fu_355_p2[0:0] == 1'b1) ? 32'd1132396544 : 32'd0);

assign select_ln119_fu_435_p3 = ((and_ln119_fu_423_p2[0:0] == 1'b1) ? 32'd1132396544 : 32'd0);

assign select_ln124_fu_503_p3 = ((and_ln124_fu_491_p2[0:0] == 1'b1) ? 32'd1132396544 : 32'd0);

assign sext_ln110_fu_265_p1 = sub_ln104_reg_580;

assign sext_ln111_fu_278_p1 = $signed(add_ln105_reg_586);

assign sext_ln112_fu_296_p1 = $signed(add_ln106_fu_291_p2);

assign shl_ln1_fu_236_p3 = {{select_ln100_fu_208_p3}, {2'd0}};

assign sub_ln104_fu_248_p2 = (zext_ln104_fu_244_p1 - j_1_cast2_fu_232_p1);

assign tmp_11_fu_391_p4 = {{bitcast_ln119_fu_388_p1[30:23]}};

assign tmp_14_fu_459_p4 = {{bitcast_ln124_fu_456_p1[30:23]}};

assign tmp_s_fu_323_p4 = {{bitcast_ln114_fu_320_p1[30:23]}};

assign trunc_ln114_fu_333_p1 = bitcast_ln114_fu_320_p1[22:0];

assign trunc_ln119_fu_401_p1 = bitcast_ln119_fu_388_p1[22:0];

assign trunc_ln124_fu_469_p1 = bitcast_ln124_fu_456_p1[22:0];

assign zext_ln104_fu_244_p1 = shl_ln1_fu_236_p3;

assign zext_ln110_1_fu_273_p1 = add_ln110_fu_268_p2;

assign zext_ln111_fu_286_p1 = add_ln111_fu_281_p2;

assign zext_ln112_fu_305_p1 = add_ln112_fu_300_p2;

endmodule //Application_Application_Pipeline_VITIS_LOOP_100_4_VITIS_LOOP_102_5
