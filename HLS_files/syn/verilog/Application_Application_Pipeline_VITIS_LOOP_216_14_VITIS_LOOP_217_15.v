// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Application_Application_Pipeline_VITIS_LOOP_216_14_VITIS_LOOP_217_15 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_r_address0,
        image_r_ce0,
        image_r_we0,
        image_r_d0,
        image_r_q0,
        image_r_address1,
        image_r_ce1,
        image_r_we1,
        image_r_d1,
        image_r_q1,
        factor,
        grp_fu_232_p_din0,
        grp_fu_232_p_din1,
        grp_fu_232_p_opcode,
        grp_fu_232_p_dout0,
        grp_fu_232_p_ce,
        grp_fu_238_p_din0,
        grp_fu_238_p_din1,
        grp_fu_238_p_dout0,
        grp_fu_238_p_ce,
        grp_fu_566_p_din0,
        grp_fu_566_p_dout0,
        grp_fu_566_p_ce,
        grp_p_hls_fptosi_float_i32_fu_180_p_din1,
        grp_p_hls_fptosi_float_i32_fu_180_p_dout0,
        grp_p_hls_fptosi_float_i32_fu_180_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] image_r_address0;
output   image_r_ce0;
output   image_r_we0;
output  [31:0] image_r_d0;
input  [31:0] image_r_q0;
output  [11:0] image_r_address1;
output   image_r_ce1;
output   image_r_we1;
output  [31:0] image_r_d1;
input  [31:0] image_r_q1;
input  [31:0] factor;
output  [31:0] grp_fu_232_p_din0;
output  [31:0] grp_fu_232_p_din1;
output  [1:0] grp_fu_232_p_opcode;
input  [31:0] grp_fu_232_p_dout0;
output   grp_fu_232_p_ce;
output  [31:0] grp_fu_238_p_din0;
output  [31:0] grp_fu_238_p_din1;
input  [31:0] grp_fu_238_p_dout0;
output   grp_fu_238_p_ce;
output  [31:0] grp_fu_566_p_din0;
input  [31:0] grp_fu_566_p_dout0;
output   grp_fu_566_p_ce;
output  [31:0] grp_p_hls_fptosi_float_i32_fu_180_p_din1;
input  [31:0] grp_p_hls_fptosi_float_i32_fu_180_p_dout0;
output   grp_p_hls_fptosi_float_i32_fu_180_p_ce;

reg ap_idle;
reg[11:0] image_r_address0;
reg image_r_ce0;
reg image_r_we0;
reg[31:0] image_r_d0;
reg[11:0] image_r_address1;
reg image_r_ce1;
reg image_r_we1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_state24_pp0_stage2_iter7;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln216_reg_445;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_136;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_state22_pp0_stage0_iter7;
wire    ap_block_state25_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_state23_pp0_stage1_iter7;
wire    ap_block_state26_pp0_stage1_iter8;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] reg_141;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] icmp_ln216_fu_170_p2;
reg   [0:0] icmp_ln216_reg_445_pp0_iter1_reg;
reg   [0:0] icmp_ln216_reg_445_pp0_iter2_reg;
reg   [0:0] icmp_ln216_reg_445_pp0_iter3_reg;
reg   [0:0] icmp_ln216_reg_445_pp0_iter4_reg;
reg   [0:0] icmp_ln216_reg_445_pp0_iter5_reg;
reg   [0:0] icmp_ln216_reg_445_pp0_iter6_reg;
reg   [0:0] icmp_ln216_reg_445_pp0_iter7_reg;
reg   [4:0] i_load_reg_449;
wire   [4:0] add_ln216_fu_185_p2;
reg   [4:0] add_ln216_reg_454;
wire   [4:0] select_ln216_fu_205_p3;
reg   [4:0] select_ln216_reg_459;
wire   [11:0] mul_ln223_fu_223_p2;
reg   [11:0] mul_ln223_reg_464;
wire  signed [7:0] sub_ln219_fu_245_p2;
reg  signed [7:0] sub_ln219_reg_471;
wire   [7:0] add_ln220_fu_251_p2;
reg   [7:0] add_ln220_reg_477;
reg   [11:0] image_addr_reg_482;
reg   [11:0] image_addr_reg_482_pp0_iter1_reg;
reg   [11:0] image_addr_reg_482_pp0_iter2_reg;
reg   [11:0] image_addr_reg_482_pp0_iter3_reg;
reg   [11:0] image_addr_reg_482_pp0_iter4_reg;
reg   [11:0] image_addr_reg_482_pp0_iter5_reg;
reg   [11:0] image_addr_reg_482_pp0_iter6_reg;
reg   [11:0] image_addr_reg_482_pp0_iter7_reg;
reg   [11:0] image_addr_3_reg_488;
reg   [11:0] image_addr_3_reg_488_pp0_iter1_reg;
reg   [11:0] image_addr_3_reg_488_pp0_iter2_reg;
reg   [11:0] image_addr_3_reg_488_pp0_iter3_reg;
reg   [11:0] image_addr_3_reg_488_pp0_iter4_reg;
reg   [11:0] image_addr_3_reg_488_pp0_iter5_reg;
reg   [11:0] image_addr_3_reg_488_pp0_iter6_reg;
reg   [11:0] image_addr_3_reg_488_pp0_iter7_reg;
wire   [11:0] add_ln225_1_fu_297_p2;
reg   [11:0] add_ln225_1_reg_494;
reg   [11:0] image_addr_4_reg_499;
reg   [11:0] image_addr_4_reg_499_pp0_iter2_reg;
reg   [11:0] image_addr_4_reg_499_pp0_iter3_reg;
reg   [11:0] image_addr_4_reg_499_pp0_iter4_reg;
reg   [11:0] image_addr_4_reg_499_pp0_iter5_reg;
reg   [11:0] image_addr_4_reg_499_pp0_iter6_reg;
reg   [11:0] image_addr_4_reg_499_pp0_iter7_reg;
reg   [11:0] image_addr_4_reg_499_pp0_iter8_reg;
wire   [31:0] add_ln223_fu_306_p2;
reg   [31:0] add_ln223_reg_505;
wire   [31:0] grp_fu_146_p2;
reg   [31:0] add_ln224_reg_510;
reg   [31:0] add_ln225_reg_515;
reg   [31:0] conv_reg_520;
reg   [31:0] conv1_reg_525;
reg   [31:0] conv2_reg_530;
reg   [31:0] mul_reg_535;
reg   [31:0] mul1_reg_540;
reg   [31:0] mul2_reg_545;
wire   [30:0] trunc_ln224_fu_322_p1;
reg   [30:0] trunc_ln224_reg_550;
wire   [0:0] grp_fu_130_p2;
reg   [0:0] icmp_ln224_reg_555;
wire   [30:0] trunc_ln225_fu_326_p1;
reg   [30:0] trunc_ln225_reg_560;
wire   [7:0] select_ln227_fu_346_p3;
reg   [7:0] select_ln227_reg_565;
reg   [0:0] icmp_ln224_1_reg_570;
wire   [7:0] select_ln228_fu_378_p3;
reg   [7:0] select_ln228_reg_575;
wire   [30:0] select_ln200_2_fu_386_p3;
reg   [30:0] select_ln200_2_reg_580;
wire   [7:0] trunc_ln200_2_fu_394_p1;
reg   [7:0] trunc_ln200_2_reg_585;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
reg    grp_p_hls_fptosi_float_i32_fu_113_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call35;
wire    ap_block_state4_pp0_stage0_iter1_ignore_call35;
wire    ap_block_state7_pp0_stage0_iter2_ignore_call35;
wire    ap_block_state10_pp0_stage0_iter3_ignore_call35;
wire    ap_block_state13_pp0_stage0_iter4_ignore_call35;
wire    ap_block_state16_pp0_stage0_iter5_ignore_call35;
wire    ap_block_state19_pp0_stage0_iter6_ignore_call35;
wire    ap_block_state22_pp0_stage0_iter7_ignore_call35;
wire    ap_block_state25_pp0_stage0_iter8_ignore_call35;
wire    ap_block_pp0_stage0_11001_ignoreCallOp129;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call35;
wire    ap_block_state5_pp0_stage1_iter1_ignore_call35;
wire    ap_block_state8_pp0_stage1_iter2_ignore_call35;
wire    ap_block_state11_pp0_stage1_iter3_ignore_call35;
wire    ap_block_state14_pp0_stage1_iter4_ignore_call35;
wire    ap_block_state17_pp0_stage1_iter5_ignore_call35;
wire    ap_block_state20_pp0_stage1_iter6_ignore_call35;
wire    ap_block_state23_pp0_stage1_iter7_ignore_call35;
wire    ap_block_state26_pp0_stage1_iter8_ignore_call35;
wire    ap_block_pp0_stage1_11001_ignoreCallOp132;
wire    ap_block_state3_pp0_stage2_iter0_ignore_call42;
wire    ap_block_state6_pp0_stage2_iter1_ignore_call42;
wire    ap_block_state9_pp0_stage2_iter2_ignore_call42;
wire    ap_block_state12_pp0_stage2_iter3_ignore_call42;
wire    ap_block_state15_pp0_stage2_iter4_ignore_call42;
wire    ap_block_state18_pp0_stage2_iter5_ignore_call42;
wire    ap_block_state21_pp0_stage2_iter6_ignore_call42;
wire    ap_block_state24_pp0_stage2_iter7_ignore_call42;
wire    ap_block_pp0_stage2_11001_ignoreCallOp137;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln223_1_fu_270_p1;
wire   [63:0] zext_ln224_fu_283_p1;
wire   [63:0] zext_ln225_fu_302_p1;
reg   [4:0] j_fu_62;
wire   [4:0] add_ln217_fu_312_p2;
wire    ap_loop_init;
reg   [4:0] i_fu_66;
wire   [4:0] select_ln216_1_fu_213_p3;
reg   [4:0] ap_sig_allocacmp_i_load;
reg   [9:0] indvar_flatten27_fu_70;
wire   [9:0] add_ln216_1_fu_176_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten27_load;
wire   [31:0] zext_ln227_fu_358_p1;
wire   [31:0] zext_ln229_fu_414_p1;
reg   [31:0] grp_fu_118_p0;
reg   [31:0] grp_fu_123_p0;
reg   [31:0] grp_fu_127_p0;
wire   [0:0] icmp_ln217_fu_199_p2;
wire   [4:0] mul_ln223_fu_223_p0;
wire   [7:0] mul_ln223_fu_223_p1;
wire   [6:0] shl_ln6_fu_233_p3;
wire   [7:0] zext_ln219_fu_241_p1;
wire   [7:0] j_4_cast5_fu_229_p1;
wire  signed [11:0] sext_ln223_fu_262_p1;
wire   [11:0] add_ln223_1_fu_265_p2;
wire  signed [11:0] sext_ln224_fu_275_p1;
wire   [11:0] add_ln224_1_fu_278_p2;
wire   [7:0] add_ln221_fu_288_p2;
wire  signed [11:0] sext_ln225_fu_293_p1;
wire   [30:0] select_ln200_fu_330_p3;
wire   [0:0] icmp_ln200_fu_340_p2;
wire   [7:0] trunc_ln200_fu_336_p1;
wire   [30:0] select_ln200_1_fu_362_p3;
wire   [0:0] icmp_ln200_1_fu_372_p2;
wire   [7:0] trunc_ln200_1_fu_368_p1;
wire   [30:0] trunc_ln219_fu_354_p1;
wire   [0:0] icmp_ln200_2_fu_402_p2;
wire   [7:0] select_ln229_fu_407_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter7_stage1;
reg    ap_idle_pp0_0to6;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to8;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire   [11:0] mul_ln223_fu_223_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Application_mul_5ns_8ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 12 ))
mul_5ns_8ns_12_1_1_U43(
    .din0(mul_ln223_fu_223_p0),
    .din1(mul_ln223_fu_223_p1),
    .dout(mul_ln223_fu_223_p2)
);

Application_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_66 <= 5'd0;
    end else if (((icmp_ln216_reg_445 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_66 <= select_ln216_1_fu_213_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln216_fu_170_p2 == 1'd0))) begin
            indvar_flatten27_fu_70 <= add_ln216_1_fu_176_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten27_fu_70 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_62 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            j_fu_62 <= add_ln217_fu_312_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            reg_136 <= image_r_q1;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            reg_136 <= image_r_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln216_fu_170_p2 == 1'd0))) begin
        add_ln216_reg_454 <= add_ln216_fu_185_p2;
        i_load_reg_449 <= ap_sig_allocacmp_i_load;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln216_reg_445 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln220_reg_477 <= add_ln220_fu_251_p2;
        mul_ln223_reg_464 <= mul_ln223_fu_223_p2;
        select_ln216_reg_459 <= select_ln216_fu_205_p3;
        sub_ln219_reg_471 <= sub_ln219_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln223_reg_505 <= add_ln223_fu_306_p2;
        icmp_ln216_reg_445 <= icmp_ln216_fu_170_p2;
        icmp_ln216_reg_445_pp0_iter1_reg <= icmp_ln216_reg_445;
        icmp_ln216_reg_445_pp0_iter2_reg <= icmp_ln216_reg_445_pp0_iter1_reg;
        icmp_ln216_reg_445_pp0_iter3_reg <= icmp_ln216_reg_445_pp0_iter2_reg;
        icmp_ln216_reg_445_pp0_iter4_reg <= icmp_ln216_reg_445_pp0_iter3_reg;
        icmp_ln216_reg_445_pp0_iter5_reg <= icmp_ln216_reg_445_pp0_iter4_reg;
        icmp_ln216_reg_445_pp0_iter6_reg <= icmp_ln216_reg_445_pp0_iter5_reg;
        icmp_ln216_reg_445_pp0_iter7_reg <= icmp_ln216_reg_445_pp0_iter6_reg;
        image_addr_4_reg_499 <= zext_ln225_fu_302_p1;
        image_addr_4_reg_499_pp0_iter2_reg <= image_addr_4_reg_499;
        image_addr_4_reg_499_pp0_iter3_reg <= image_addr_4_reg_499_pp0_iter2_reg;
        image_addr_4_reg_499_pp0_iter4_reg <= image_addr_4_reg_499_pp0_iter3_reg;
        image_addr_4_reg_499_pp0_iter5_reg <= image_addr_4_reg_499_pp0_iter4_reg;
        image_addr_4_reg_499_pp0_iter6_reg <= image_addr_4_reg_499_pp0_iter5_reg;
        image_addr_4_reg_499_pp0_iter7_reg <= image_addr_4_reg_499_pp0_iter6_reg;
        image_addr_4_reg_499_pp0_iter8_reg <= image_addr_4_reg_499_pp0_iter7_reg;
        select_ln200_2_reg_580 <= select_ln200_2_fu_386_p3;
        select_ln228_reg_575 <= select_ln228_fu_378_p3;
        trunc_ln200_2_reg_585 <= trunc_ln200_2_fu_394_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln224_reg_510 <= grp_fu_146_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln216_reg_445 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln225_1_reg_494 <= add_ln225_1_fu_297_p2;
        image_addr_3_reg_488 <= zext_ln224_fu_283_p1;
        image_addr_reg_482 <= zext_ln223_1_fu_270_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln225_reg_515 <= grp_fu_146_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv1_reg_525 <= grp_fu_566_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv2_reg_530 <= grp_fu_566_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_reg_520 <= grp_fu_566_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln224_1_reg_570 <= grp_fu_130_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln224_reg_555 <= grp_fu_130_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        image_addr_3_reg_488_pp0_iter1_reg <= image_addr_3_reg_488;
        image_addr_3_reg_488_pp0_iter2_reg <= image_addr_3_reg_488_pp0_iter1_reg;
        image_addr_3_reg_488_pp0_iter3_reg <= image_addr_3_reg_488_pp0_iter2_reg;
        image_addr_3_reg_488_pp0_iter4_reg <= image_addr_3_reg_488_pp0_iter3_reg;
        image_addr_3_reg_488_pp0_iter5_reg <= image_addr_3_reg_488_pp0_iter4_reg;
        image_addr_3_reg_488_pp0_iter6_reg <= image_addr_3_reg_488_pp0_iter5_reg;
        image_addr_3_reg_488_pp0_iter7_reg <= image_addr_3_reg_488_pp0_iter6_reg;
        image_addr_reg_482_pp0_iter1_reg <= image_addr_reg_482;
        image_addr_reg_482_pp0_iter2_reg <= image_addr_reg_482_pp0_iter1_reg;
        image_addr_reg_482_pp0_iter3_reg <= image_addr_reg_482_pp0_iter2_reg;
        image_addr_reg_482_pp0_iter4_reg <= image_addr_reg_482_pp0_iter3_reg;
        image_addr_reg_482_pp0_iter5_reg <= image_addr_reg_482_pp0_iter4_reg;
        image_addr_reg_482_pp0_iter6_reg <= image_addr_reg_482_pp0_iter5_reg;
        image_addr_reg_482_pp0_iter7_reg <= image_addr_reg_482_pp0_iter6_reg;
        select_ln227_reg_565 <= select_ln227_fu_346_p3;
        trunc_ln225_reg_560 <= trunc_ln225_fu_326_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul1_reg_540 <= grp_fu_238_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul2_reg_545 <= grp_fu_238_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_reg_535 <= grp_fu_238_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_141 <= grp_fu_232_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln224_reg_550 <= trunc_ln224_fu_322_p1;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_445 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln216_reg_445_pp0_iter7_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter7_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter7_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to6 = 1'b1;
    end else begin
        ap_idle_pp0_0to6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to8 = 1'b1;
    end else begin
        ap_idle_pp0_1to8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 5'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_66;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten27_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten27_load = indvar_flatten27_fu_70;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_118_p0 = mul2_reg_545;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_118_p0 = mul1_reg_540;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_118_p0 = mul_reg_535;
    end else begin
        grp_fu_118_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_123_p0 = conv2_reg_530;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_123_p0 = conv1_reg_525;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_123_p0 = conv_reg_520;
    end else begin
        grp_fu_123_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_127_p0 = add_ln225_reg_515;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_127_p0 = add_ln224_reg_510;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_127_p0 = add_ln223_reg_505;
    end else begin
        grp_fu_127_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001_ignoreCallOp137) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp132) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp129) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_p_hls_fptosi_float_i32_fu_113_ap_ce = 1'b1;
    end else begin
        grp_p_hls_fptosi_float_i32_fu_113_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_r_address0 = image_addr_4_reg_499_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_r_address0 = image_addr_reg_482_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        image_r_address0 = zext_ln224_fu_283_p1;
    end else begin
        image_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_r_address1 = image_addr_3_reg_488_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_r_address1 = zext_ln225_fu_302_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        image_r_address1 = zext_ln223_1_fu_270_p1;
    end else begin
        image_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        image_r_ce0 = 1'b1;
    end else begin
        image_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        image_r_ce1 = 1'b1;
    end else begin
        image_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            image_r_d0 = zext_ln229_fu_414_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            image_r_d0 = zext_ln227_fu_358_p1;
        end else begin
            image_r_d0 = 'bx;
        end
    end else begin
        image_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        image_r_we0 = 1'b1;
    end else begin
        image_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_r_we1 = 1'b1;
    end else begin
        image_r_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to8 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln216_1_fu_176_p2 = (ap_sig_allocacmp_indvar_flatten27_load + 10'd1);

assign add_ln216_fu_185_p2 = (ap_sig_allocacmp_i_load + 5'd1);

assign add_ln217_fu_312_p2 = (select_ln216_reg_459 + 5'd1);

assign add_ln220_fu_251_p2 = ($signed(sub_ln219_fu_245_p2) + $signed(8'd1));

assign add_ln221_fu_288_p2 = ($signed(sub_ln219_reg_471) + $signed(8'd2));

assign add_ln223_1_fu_265_p2 = ($signed(mul_ln223_reg_464) + $signed(sext_ln223_fu_262_p1));

assign add_ln223_fu_306_p2 = ($signed(image_r_q1) + $signed(32'd4294967168));

assign add_ln224_1_fu_278_p2 = ($signed(mul_ln223_reg_464) + $signed(sext_ln224_fu_275_p1));

assign add_ln225_1_fu_297_p2 = ($signed(mul_ln223_reg_464) + $signed(sext_ln225_fu_293_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp129 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001_ignoreCallOp132 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001_ignoreCallOp137 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter7_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter8_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter8_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2_ignore_call35 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign grp_fu_130_p2 = (($signed(grp_p_hls_fptosi_float_i32_fu_180_p_dout0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_146_p2 = ($signed(reg_136) + $signed(32'd4294967168));

assign grp_fu_232_p_ce = 1'b1;

assign grp_fu_232_p_din0 = grp_fu_118_p0;

assign grp_fu_232_p_din1 = 32'd1124073472;

assign grp_fu_232_p_opcode = 2'd0;

assign grp_fu_238_p_ce = 1'b1;

assign grp_fu_238_p_din0 = grp_fu_123_p0;

assign grp_fu_238_p_din1 = factor;

assign grp_fu_566_p_ce = 1'b1;

assign grp_fu_566_p_din0 = grp_fu_127_p0;

assign grp_p_hls_fptosi_float_i32_fu_180_p_ce = grp_p_hls_fptosi_float_i32_fu_113_ap_ce;

assign grp_p_hls_fptosi_float_i32_fu_180_p_din1 = reg_141;

assign icmp_ln200_1_fu_372_p2 = ((select_ln200_1_fu_362_p3 < 31'd255) ? 1'b1 : 1'b0);

assign icmp_ln200_2_fu_402_p2 = ((select_ln200_2_reg_580 < 31'd255) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_340_p2 = ((select_ln200_fu_330_p3 < 31'd255) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_170_p2 = ((ap_sig_allocacmp_indvar_flatten27_load == 10'd690) ? 1'b1 : 1'b0);

assign icmp_ln217_fu_199_p2 = ((j_fu_62 == 5'd30) ? 1'b1 : 1'b0);

assign image_r_d1 = select_ln228_reg_575;

assign j_4_cast5_fu_229_p1 = select_ln216_fu_205_p3;

assign mul_ln223_fu_223_p0 = mul_ln223_fu_223_p00;

assign mul_ln223_fu_223_p00 = select_ln216_1_fu_213_p3;

assign mul_ln223_fu_223_p1 = 12'd90;

assign select_ln200_1_fu_362_p3 = ((icmp_ln224_1_reg_570[0:0] == 1'b1) ? trunc_ln225_reg_560 : 31'd0);

assign select_ln200_2_fu_386_p3 = ((grp_fu_130_p2[0:0] == 1'b1) ? trunc_ln219_fu_354_p1 : 31'd0);

assign select_ln200_fu_330_p3 = ((icmp_ln224_reg_555[0:0] == 1'b1) ? trunc_ln224_reg_550 : 31'd0);

assign select_ln216_1_fu_213_p3 = ((icmp_ln217_fu_199_p2[0:0] == 1'b1) ? add_ln216_reg_454 : i_load_reg_449);

assign select_ln216_fu_205_p3 = ((icmp_ln217_fu_199_p2[0:0] == 1'b1) ? 5'd0 : j_fu_62);

assign select_ln227_fu_346_p3 = ((icmp_ln200_fu_340_p2[0:0] == 1'b1) ? trunc_ln200_fu_336_p1 : 8'd255);

assign select_ln228_fu_378_p3 = ((icmp_ln200_1_fu_372_p2[0:0] == 1'b1) ? trunc_ln200_1_fu_368_p1 : 8'd255);

assign select_ln229_fu_407_p3 = ((icmp_ln200_2_fu_402_p2[0:0] == 1'b1) ? trunc_ln200_2_reg_585 : 8'd255);

assign sext_ln223_fu_262_p1 = sub_ln219_reg_471;

assign sext_ln224_fu_275_p1 = $signed(add_ln220_reg_477);

assign sext_ln225_fu_293_p1 = $signed(add_ln221_fu_288_p2);

assign shl_ln6_fu_233_p3 = {{select_ln216_fu_205_p3}, {2'd0}};

assign sub_ln219_fu_245_p2 = (zext_ln219_fu_241_p1 - j_4_cast5_fu_229_p1);

assign trunc_ln200_1_fu_368_p1 = select_ln200_1_fu_362_p3[7:0];

assign trunc_ln200_2_fu_394_p1 = select_ln200_2_fu_386_p3[7:0];

assign trunc_ln200_fu_336_p1 = select_ln200_fu_330_p3[7:0];

assign trunc_ln219_fu_354_p1 = grp_p_hls_fptosi_float_i32_fu_180_p_dout0[30:0];

assign trunc_ln224_fu_322_p1 = grp_p_hls_fptosi_float_i32_fu_180_p_dout0[30:0];

assign trunc_ln225_fu_326_p1 = grp_p_hls_fptosi_float_i32_fu_180_p_dout0[30:0];

assign zext_ln219_fu_241_p1 = shl_ln6_fu_233_p3;

assign zext_ln223_1_fu_270_p1 = add_ln223_1_fu_265_p2;

assign zext_ln224_fu_283_p1 = add_ln224_1_fu_278_p2;

assign zext_ln225_fu_302_p1 = add_ln225_1_reg_494;

assign zext_ln227_fu_358_p1 = select_ln227_reg_565;

assign zext_ln229_fu_414_p1 = select_ln229_fu_407_p3;

endmodule //Application_Application_Pipeline_VITIS_LOOP_216_14_VITIS_LOOP_217_15
